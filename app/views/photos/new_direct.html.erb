<div class="modal-dialog">
	<div class="modal-content">
		<div class="modal-body">
			<%= form_for(@photo, :url => photos_path) do |f| %>
			<form class="form col-md-12 center-block">
				<div class="form-group">
					<%= f.text_field :title, autofocus: true, :class => "form-control input-lg", :placeholder => "Title"  %>
				</div>
				<div class="form-group">
					<div class="upload_button_holder">
						<%= link_to("Upload", "#", :class => "upload_button") %>
						<%= f.cl_image_upload(:image, :return_delete_token=>true) %>
					</div>
					<span class="status"></span>
				</div>
				<div id="direct_upload">
					Drag and drop the image here
				</div>
				<div class="form_line">
					<div class="form_controls">
						<%= f.submit "Submit Design" %>
						<% if @error %><span class="error"><%= @error %></span><% end %>
					</div>
				</div>
				<%= f.hidden_field :bytes %>
				<%= f.hidden_field :public_id %>

				<%= hidden_field_tag :direct, params[:direct] %>
				<% end %>
				<div class="form_line">
					<div class="form_controls">
						<div class="preview"></div>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Configure Cloudinary jQuery plugin -->
<%= cloudinary_js_config %>

<script>
	$(document).ready(function() {
		// Cloudinary jQuery integration library uses jQuery File Upload widget
		// (see http://blueimp.github.io/jQuery-File-Upload/).
		// Any file input field with cloudinary-fileupload class is automatically
		// wrapped using the File Upload widget and configured for Cloudinary uploads.
		// You can further customize the configuration using .fileupload method
		// as we do below.
		$(".cloudinary-fileupload").fileupload({
			// Uncomment the following lines to enable client side image resizing and valiation.
			// Make sure cloudinary/processing is included the js file
			disableImageResize: false,
			imageMaxWidth: 100,
			imageMaxHeight: 100,
			acceptFileTypes: /(\.|\/)(gif|jpe?g|png|bmp|ico)$/i,
			maxFileSize: 5000000, // 20MB
			dropZone : "#direct_upload",
			start : function(e) {
				$(".status").text("Starting upload...");
			},
			progress : function(e, data) {
				$(".status").text("Uploading... " + Math.round((data.loaded * 100.0) / data.total) + "%");
			},
			fail : function(e, data) {
				$(".status").text("Upload failed");
			}
		}).off("cloudinarydone").on("cloudinarydone", function(e, data) {
			$("#photo_bytes").val(data.result.bytes);
			$("#photo_public_id").val(data.result.public_id);
			$(".status").text("");
			var preview = $(".preview").html('');
			$.cloudinary.image(data.result.public_id, {
				format : data.result.format,
				crop : "fill",
				class : "img_preview"
			}).appendTo(preview);

			$('<a/>').addClass('delete_by_token').attr({
				href : '#'
			}).data({
				delete_token : data.result.delete_token
			}).html('&times;').appendTo(preview).click(function(e) {
				e.preventDefault();
				$.cloudinary.delete_by_token($(this).data('delete_token')).done(function() {
					$('.preview').html('');
					$('#info').html('');
					$("#photo_bytes").val('');
					$("#photo_public_id").val('');
					$('input[name="photo[image]"]').remove();
				}).fail(function() {
					$('.status').text("Cannot delete image");
				});
			});
			//view_upload_details(data.result);
		});
	});

	// function view_upload_details(upload) {
	// // Build an html table out of the upload object
	// var rows = [];
	// $.each(upload, function(k,v){
	// rows.push(
	// $("<tr>")
	// .append($("<td>").text(k))
	// .append($("<td>").text(JSON.stringify(v))));
	// });
	// $("#info").html(
	// $("<div class=\"upload_details\">")
	// .append("<h2>Upload metadata:</h2>")
	// .append($("<table>").append(rows)));
	// }
</script>
